name: "Create k3d Cluster"
description: "Provision a local k3d Kubernetes cluster and expose KUBECONFIG"
author: "@jesus.rivera"

inputs:
  cluster-name:
    description: "Name of the k3d cluster"
    required: true

outputs:
  kubeconfig-contents:
    description: "Raw kubeconfig content"
    value: ${{ steps.export-kubeconfig.outputs.kubeconfig-contents }}

runs:
  using: "composite"
  steps:
    - name: Install k3d
      shell: bash
      run: |
        curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash

    - name: Write k3d config template to file
      shell: bash
      run: |
        cat <<EOF > k3d-template.yaml
        ${K3D_CONFIG_TEMPLATE}
        EOF
      env:
        K3D_CONFIG_TEMPLATE: ${{ env.K3D_CONFIG_TEMPLATE }}

    - name: Render k3d config file
      uses: nowactions/envsubst@v1
      with:
        input: k3d-template.yaml
        output: k3d-config.yaml
      env:
        CLUSTER_NAME: ${{ inputs.cluster-name }}

    - name: Validate and debug k3d config file
      shell: bash
      run: |
        echo "----- k3d-config.yaml content -----"
        cat k3d-config.yaml
        echo "-----------------------------------"
        if ! grep -q '^apiVersion:' k3d-config.yaml || ! grep -q '^kind:' k3d-config.yaml; then
          echo "Invalid k3d config: Missing 'apiVersion' or 'kind'"
          exit 1
        fi

    - name: Create cluster using rendered config
      shell: bash
      run: |
        k3d cluster create --config k3d-config.yaml

    - name: Export kubeconfig
      id: export-kubeconfig
      shell: bash
      run: |
        mkdir -p $HOME/.kube
        k3d kubeconfig get ${{ inputs.cluster-name }} > $HOME/.kube/config
        echo "kubeconfig-contents<<EOF" >> $GITHUB_OUTPUT
        cat $HOME/.kube/config >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT