name: CD

on:
  workflow_dispatch:

env:
  TF_VAR_database_name: ${{ vars.DATABASE_NAME }}

jobs:
  create-cluster:
    name: Create k3d Cluster
    runs-on: ubuntu-latest

    outputs:
      kubeconfig: ${{ steps.k3d.outputs.kubeconfig }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create k3d cluster
        id: k3d
        uses: ./.github/actions/create-k3d-cluster
        with:
          cluster-name: devsu

      - name: Debug Kubeconfig Output
        run: echo ${{ steps.k3d.outputs.kubeconfig }}"

      - name: Verify cluster
        run: kubectl get all -A
        env:
          KUBECONFIG: ${{ steps.k3d.outputs.kubeconfig }}

  deploy-app:
    name: Deploy Devsu App
    needs: create-cluster
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    env:
      KUBE_CONFIG_PATH: ${{ needs.create-cluster.outputs.kubeconfig }}
      TF_VAR_kubeconfig_path: ${{ needs.create-cluster.outputs.kubeconfig }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false

      - name: Verify deployment
        run: |
          kubectl get pods -n devsu
          kubectl get services -n devsu
          kubectl get ingress -n devsu
          kubectl get deployments -n devsu

      - name: Port forward to service
        run: |
          kubectl port-forward service/devsu-service 8080:8080 &
          sleep 5
          curl http://localhost:8080
