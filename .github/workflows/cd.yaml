name: CD

on:
  workflow_dispatch:

env:
  TF_VAR_database_name: ${{ vars.DATABASE_NAME }}
  CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}
  K3D_CONFIG: ${{ vars.K3D_CONFIG }}

jobs:
  create-cluster:
    name: Create k3d Cluster
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create k3d cluster
        uses: ./.github/actions/create-k3d-cluster
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          k3d-config: ${{ env.K3D_CONFIG }}

      - name: Verify cluster
        run: kubectl get all -A

  deploy-app:
    name: Deploy Devsu App
    needs: create-cluster
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    env:
      KUBECONFIG: ~/.kube/config
      KUBE_CONFIG_PATH: ~/.kube/config
      TF_VAR_kubeconfig_path: ~/.kube/config

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Write kubeconfig to file
        run: |
          mkdir -p ~/.kube
          k3d kubeconfig get ${{ env.CLUSTER_NAME }} > ~/.kube/config
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -no-color

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false

      - name: Verify deployment
        run: |
          kubectl get pods -n devsu
          kubectl get svc -n devsu
          kubectl get ingress -n devsu

      - name: Port forward and test
        run: |
          kubectl port-forward service/devsu-service 8080:8000 -n devsu &
          sleep 5
          curl http://localhost:8080